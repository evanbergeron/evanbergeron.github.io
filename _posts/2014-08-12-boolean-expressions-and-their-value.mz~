---
layout: post
title: Boolean Expressions and Their Value
---

Edsger Dijkstra has suggested that the programming language ALGOL 60 was the first programming language to make the distinction that a boolean expression wasn't simply something that was "right" or "wrong," but that it had a value - true or false.

> How great that step was I learned from my mother’s reaction. She was a gifted mathematician, but she could not make that step. For her, “three plus five is ten” was not a complicated way of saying “false”; it was just wrong.

The distinction is analogous to the difference between the statements "All blondes are dumb" and "What if all blondes were dumb?" It's about the context and usage. The first statement, in the case that it's false, has no real value. But the second statement's merit is not dependent on its truth value: it's useful regardless of whether it's true or false.

It's interesting to think that booleans weren't always first-class citizens. Not only in prorgamming and computer science, but mathematically as well.

In modern discrete math classes, we are taught about quantified boolean formula statements that hold the value true or false. It's odd that we didn't always view them in that light.

In the same interview as the above quote, Dijkstra claims that "computing science started with ALGOL 60." Recently reading about [PSPACE](http://en.wikipedia.org/wiki/PSPACE) and its canonical representative, [TQBF](http://en.wikipedia.org/wiki/Quantified_Boolean_formula_problem), I'm inclined to agree.
